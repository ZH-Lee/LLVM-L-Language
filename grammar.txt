
Token:

1. def      # define a funtion
2. extern   # extern link
3. id       # identifiers, [a-zA-Z]*[a-zA-Z0-9]*
4. for      # todo
5. if
6. else     # todo
7. int, double # todo
8. return


Grammar:

Type
        :   int
        |   double

Constant
        :   [0-9]*.[0-9]*

Identifier
        :   [a-zA-Z_][a-zA-Z0-9]*

binary_operator
        :   '+'
        |   '-'
        |   '*'
        |   '/'
        |   '='

primary_expression
        :   (Identifier|Constant) (binary_operator (Identifier|Constant) )*
        |   function_call_expression
        |   unary Identifier
        |   return_expression
        |   variable_define_expression
        |   if_expression

variable_define_expression
        :   Type Identifier '=' primary_expression ';'

function_call_expression
        :   Type Identifier '=' function_call '(' (Identifier)* ')' ';'
        |   Identifier '(' (Identifier)*(,Identifier)* ')' ';'


function_define_expression
        :   def Identifier '(' Identifier (, Identifier)* ')' \
                   '{' primary_expression '}' ';'

return_expression
        :   return Identifier ';'

if_expression
        :   if '(' primary_expression ')' '{' primary_expression '}'
        |   if '(' primary_expression ')' '{' primary_expression '}' \
            else '{' primary_expression'}'
